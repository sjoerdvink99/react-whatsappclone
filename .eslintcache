[{"/Users/sjoerdvink/Desktop/whatsappclone/src/index.js":"1","/Users/sjoerdvink/Desktop/whatsappclone/src/reportWebVitals.js":"2","/Users/sjoerdvink/Desktop/whatsappclone/src/App.js":"3","/Users/sjoerdvink/Desktop/whatsappclone/src/Sidebar.js":"4","/Users/sjoerdvink/Desktop/whatsappclone/src/SidebarChat.js":"5","/Users/sjoerdvink/Desktop/whatsappclone/src/Chat.js":"6","/Users/sjoerdvink/Desktop/whatsappclone/src/firebase.js":"7","/Users/sjoerdvink/Desktop/whatsappclone/src/Login.js":"8","/Users/sjoerdvink/Desktop/whatsappclone/src/reducer.js":"9","/Users/sjoerdvink/Desktop/whatsappclone/src/StateProvider.js":"10"},{"size":689,"mtime":1610109559552,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1610022654683,"results":"13","hashOfConfig":"12"},{"size":799,"mtime":1610116979335,"results":"14","hashOfConfig":"12"},{"size":1906,"mtime":1610110201628,"results":"15","hashOfConfig":"12"},{"size":1483,"mtime":1610115773876,"results":"16","hashOfConfig":"12"},{"size":3387,"mtime":1610114352432,"results":"17","hashOfConfig":"12"},{"size":580,"mtime":1610036147966,"results":"18","hashOfConfig":"12"},{"size":1093,"mtime":1610109893043,"results":"19","hashOfConfig":"12"},{"size":405,"mtime":1610109141529,"results":"20","hashOfConfig":"12"},{"size":375,"mtime":1610108758631,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"wdez90",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/sjoerdvink/Desktop/whatsappclone/src/index.js",[],["46","47"],"/Users/sjoerdvink/Desktop/whatsappclone/src/reportWebVitals.js",[],"/Users/sjoerdvink/Desktop/whatsappclone/src/App.js",["48","49"],"/Users/sjoerdvink/Desktop/whatsappclone/src/Sidebar.js",["50"],"import React, { useState, useEffect } from 'react';\nimport './Sidebar.css';\nimport SidebarChat from './SidebarChat';\nimport db from './firebase';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport { SearchOutlined, MoreVert, Chat, DonutLarge } from '@material-ui/icons';\nimport { useStateValue } from './StateProvider';\n\nfunction Sidebar() {\n\n    const [rooms, setRooms] = useState([]);\n    const [{ user }, dispatch] = useStateValue();\n\n    useEffect(() => {\n        const unsubscribe = db.collection('rooms').onSnapshot((snapshot) => \n            setRooms(\n                snapshot.docs.map(doc => ({\n                    id: doc.id,\n                    data: doc.data(),\n                }))));\n        return () => {\n            unsubscribe();\n        }\n    }, []);\n\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar_header\">\n                <Avatar src={user?.photoURL} />\n                <div className=\"sidebar_headerRight\">\n                    <IconButton>\n                        <DonutLarge />\n                    </IconButton>\n                    <IconButton>\n                        <Chat />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVert />\n                    </IconButton>                    \n                </div>\n            </div>\n            <div className=\"sidebar_search\">\n                <div className=\"sidebar_searchContainer\">\n                    <SearchOutlined />\n                    <input placeholder=\"Search or start new chat\" type=\"text\"/>\n                </div>\n            </div>\n            <div className=\"sidebar_chats\">\n                <SidebarChat addNewChat />\n                {rooms.map(room => (\n                    <SidebarChat key={room.id} id={room.id} name={room.data.name} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar;","/Users/sjoerdvink/Desktop/whatsappclone/src/SidebarChat.js",[],"/Users/sjoerdvink/Desktop/whatsappclone/src/Chat.js",["51","52"],"import React, { useState, useEffect } from 'react';\nimport {useParams} from 'react-router-dom';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport './Chat.css';\nimport { AttachFile, MoreVert, SearchOutlined, Mic, InsertEmoticon } from '@material-ui/icons';\nimport db from './firebase';\nimport { useStateValue } from './StateProvider';\nimport firebase from 'firebase';\n\nfunction Chat () {\n\n    const [input, setInput] = useState('');\n    const [seed, setSeed] = useState('');\n    const { roomId } = useParams();\n    const [roomName, setRoomName] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [{user}, dispatch] = useStateValue();\n\n    useEffect(() => {\n        if (roomId) {\n            db.collection('rooms')\n                .doc(roomId)\n                .onSnapshot((snapshot) => (setRoomName(snapshot.data().name)))\n\n            db.collection('rooms').doc(roomId).collection('messages').orderBy('timestamp', 'asc').onSnapshot(snapshot => (\n                setMessages(snapshot.docs.map(doc => doc.data()))\n            ));\n        }\n    }, [roomId]);\n\n    useEffect(() => {\n        setSeed(Math.floor(Math.random() * 5000))\n    }, [roomId]);\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        console.log('you typed', input);\n\n        db.collection('rooms').doc(roomId).collection('messages').add({\n            message: input,\n            name: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        });\n\n        setInput('');\n    };\n\n    return (\n        <div className=\"chat\">\n            <div className=\"chat_header\">\n                <Avatar src={`https://avatars.dicebear.com/api/male/${seed}.svg`} />\n                <div className=\"chat_headerInfo\">\n                    <h3>{roomName}</h3>\n                    <p>Last message at {\"\"}\n                    {new Date(\n                        messages[messages.length - 1]?.\n                        timestamp?.toDate()\n                    ).toUTCString()}\n                    </p>\n                </div>\n                <div className=\"chat_headerRight\">\n                    <IconButton>\n                        <SearchOutlined />\n                    </IconButton>\n                    <IconButton>\n                        <AttachFile />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVert />\n                    </IconButton>\n                </div>\n            </div>\n            <div className=\"chat_body\">\n                {messages.map(message => (\n                    <p className={`chat_message ${message.name === user.displayName && \"chat_reciever\"}`}>\n                        <span className=\"chat_name\">{message.name}</span>\n                        {message.message}\n                        <span className=\"chat_timestamp\">{new Date(message.timestamp?.toDate()).toUTCString()}</span>\n                    </p>  \n                ))}\n            </div>\n            <div className=\"chat_footer\">\n                <InsertEmoticon />\n                <form>\n                    <input placeholder='Type a message' type=\"text\" value={input} onChange={e => setInput(e.target.value)} />\n                    <button onClick={sendMessage} type='submit'>Send message</button>\n                </form>\n                <Mic />\n            </div>\n        </div>\n    );\n}\n\nexport default Chat;","/Users/sjoerdvink/Desktop/whatsappclone/src/firebase.js",[],"/Users/sjoerdvink/Desktop/whatsappclone/src/Login.js",["53","54"],"import React from 'react';\nimport './Login.css';\nimport { Button } from '@material-ui/core';\nimport { auth, provider } from './firebase';\nimport { useStateValue } from './StateProvider';\nimport { actionTypes } from './reducer';\n\nfunction Login() {\n\n    const [{}, dispatch] = useStateValue();\n\n    const signIn = () => {\n        auth\n            .signInWithPopup(provider)\n            .then((result) => {\n                dispatch({\n                    type: actionTypes.SET_USER, \n                    user: result.user,\n                });\n            })\n            .catch((error) => alert(error.message));\n    }\n\n    return(\n        <div className=\"login\">\n            <div className=\"login_container\">\n                <img src=\"https://1000merken.com/wp-content/uploads/2020/05/WhatsApp-Logo.png\"/>\n                <div className=\"login_text\">\n                    <h1>Sign in to WhatsApp</h1>\n                </div>\n\n                <Button onClick={signIn}>\n                    Sign in with Google\n                </Button>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;","/Users/sjoerdvink/Desktop/whatsappclone/src/reducer.js",[],"/Users/sjoerdvink/Desktop/whatsappclone/src/StateProvider.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":25},{"ruleId":"59","severity":1,"message":"63","line":11,"column":18,"nodeType":"61","messageId":"62","endLine":11,"endColumn":26},{"ruleId":"59","severity":1,"message":"63","line":12,"column":22,"nodeType":"61","messageId":"62","endLine":12,"endColumn":30},{"ruleId":"59","severity":1,"message":"63","line":17,"column":20,"nodeType":"61","messageId":"62","endLine":17,"endColumn":28},{"ruleId":"64","severity":1,"message":"65","line":56,"column":54,"nodeType":"66","messageId":"67","endLine":56,"endColumn":56,"fix":"68"},{"ruleId":"69","severity":1,"message":"70","line":10,"column":12,"nodeType":"71","messageId":"72","endLine":10,"endColumn":14},{"ruleId":"73","severity":1,"message":"74","line":27,"column":17,"nodeType":"75","endLine":27,"endColumn":97},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"78","text":"79"},"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",[1928,1955],"\n                        ?."]